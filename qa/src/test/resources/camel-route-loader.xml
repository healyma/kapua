<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (c) 2018 Eurotech and/or its affiliates and others

    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
        Eurotech - initial API and implementation
 -->
 <!-- 
 The condition can have placeholders. The replacement will be addressed by the ChoiceLeaf implementation while setting the condition.
 For the available managed placeholders see the CAMEL_ROUTER_PLACEHOLDER enum.
  -->
<routeContainer>
    <basicRoute id="main_kapua_route" autoStartup="true" multicast="false" 
        errorHandlerRef="mainRouteMessageErrorHandler"
        from="activemq:queue:Consumer.eurotech:mainRoutelisteners:EXACTLY_ONCE.VirtualTopic.>?asyncConsumer=false&amp;acknowledgementModeName=CLIENT_ACKNOWLEDGE&amp;transacted=false&amp;concurrentConsumers=20&amp;maxConcurrentConsumers=50" >
        <routeList>
            <endpointBeanTo id="session_binding" beanName="kapuaCamelFilter" method="bindSession"/>
            <choiceRoot id="main_choice">
                <choiceList>
                     <choiceLeaf id="lifecycle_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}.*'">
                         <choiceList>
                             <choiceRoot id="lifecycle_subchoice">
                                 <choiceList>
                                      <choiceLeaf id="birth_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}(.*\.){2}MQTT\.BIRTH'">
                                          <choiceList>
                                              <endpointBeanTo id="lc_conv_birth" beanName="kapuaLifeCycleConverter" method="convertToBirth" />
                                              <endpointBeanTo id="lc_proc_birth" beanName="deviceMessageListener" method="processBirthMessage" />
                                          </choiceList>
                                      </choiceLeaf>
                                      <choiceLeaf id="dc_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}(.*\.){2}MQTT\.DC'">
                                          <choiceList>
                                              <endpointBeanTo id="lc_conv_dc" beanName="kapuaLifeCycleConverter" method="convertToDisconnect" />
                                              <endpointBeanTo id="lc_proc_dc" beanName="deviceMessageListener" method="processDisconnectMessage" />
                                          </choiceList>
                                      </choiceLeaf>
                                      <choiceLeaf id="apps_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}(.*\.){2}MQTT\.APPS'">
                                          <choiceList>
                                              <endpointBeanTo id="lc_conv_apps" beanName="kapuaLifeCycleConverter" method="convertToApps" />
                                              <endpointBeanTo id="lc_proc_apps" beanName="deviceMessageListener" method="processAppsMessage" />
                                          </choiceList>
                                      </choiceLeaf>
                                      <choiceLeaf id="lwt_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}(.*\.){2}MQTT\.LWT'">
                                          <choiceList>
                                              <endpointBeanTo id="lc_conv_lwt" beanName="kapuaLifeCycleConverter" method="convertToMissing" />
                                              <endpointBeanTo id="lc_proc_lwt" beanName="deviceMessageListener" method="processMissingMessage" />
                                          </choiceList>
                                      </choiceLeaf>
                                      <choiceLeaf id="notify_choice" condition="${ORIGINAL_DESTINATION} regex '^${CLASSIFIER}(.*\.){2}MQTT\.NOTIFY'">
                                          <choiceList>
                                              <endpointBeanTo id="lc_conv_notify" beanName="kapuaLifeCycleConverter" method="convertToNotify" />
                                              <endpointBeanTo id="lc_proc_notify" beanName="deviceMessageListener" method="processNotifyMessage" />
                                          </choiceList>
                                      </choiceLeaf>
                                 </choiceList>
                             </choiceRoot>
                         </choiceList>
                     </choiceLeaf>
                </choiceList>
                <otherwise>
                    <basicRoute id="es_data_store">
                        <routeList>
                            <endpointBeanTo id="tel_es_conv" beanName="kapuaDataConverter" method="convertToData" />
                            <endpointBeanTo id="tel_es_proc" beanName="dataStorageMessageProcessor" method="processMessage" />
                        </routeList>
                    </basicRoute>
                </otherwise>
            </choiceRoot>
            <endpointBeanTo id="session_unbinding" beanName="kapuaCamelFilter" method="unbindSession"/>
        </routeList>
        <onExceptionList>
            <onException id="dsc_ex" exception="org.eclipse.kapua.service.datastore.internal.mediator.DatastoreCommunicationException" 
                maximumRedeliveries="0" logRetryAttempted="true" retryAttemptedLogLevel="WARN">
                <endpointList>
                    <endpointBeanTo id="dsc_ex_filter" beanName="kapuaCamelFilter" method="bridgeError" />
                    <endpointUriTo id="dsc_ex_endpoint" uri="activemq:queue:storeCommunicationException" />
                </endpointList>
            </onException>
            <onException id="cfg_ex" exception="org.eclipse.kapua.service.datastore.internal.mediator.ConfigurationException" 
                maximumRedeliveries="0" logRetryAttempted="true" retryAttemptedLogLevel="WARN">
                <endpointList>
                    <endpointBeanTo id="cfg_ex_filter" beanName="kapuaCamelFilter" method="bridgeError" />
                    <endpointUriTo id="cfg_ex_endpoint" uri="activemq:queue:storeConfigurationException" />
                </endpointList>
            </onException>
            <onException id="ds_ex" exception="org.eclipse.kapua.service.datastore.internal.mediator.DatastoreException" 
                maximumRedeliveries="0" logRetryAttempted="true" retryAttemptedLogLevel="WARN">
                <endpointList>
                    <endpointBeanTo id="ds_ex_filter" beanName="kapuaCamelFilter" method="bridgeError" />
                    <endpointUriTo id="ds_ex_endpoint" uri="activemq:queue:storeGenericException" />
                </endpointList>
            </onException>
            <onException id="kapua_ex" exception="org.eclipse.kapua.KapuaException" 
                maximumRedeliveries="0" logRetryAttempted="true" retryAttemptedLogLevel="WARN">
                <endpointList>
                    <endpointBeanTo id="kapua_ex_filter" beanName="kapuaCamelFilter" method="bridgeError" />
                    <endpointUriTo id="kapua_ex_endpoint" uri="activemq:queue:notProcessableMessage" />
                </endpointList>
            </onException>
        </onExceptionList>
    </basicRoute>
</routeContainer>